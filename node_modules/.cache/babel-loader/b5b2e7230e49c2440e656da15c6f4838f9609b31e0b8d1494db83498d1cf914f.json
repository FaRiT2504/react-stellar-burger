{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\react-stellar-burger\\\\src\\\\components\\\\burger-constructor-element\\\\burger-constructor-element.jsx\",\n  _s = $RefreshSig$();\nimport React, { useMemo, useState } from \"react\";\nimport { useDrag, useDrop } from \"react-dnd\";\nimport styles from './burger-constructor-element.module.css';\nimport { ConstructorElement } from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { DragIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport { useCallback, useRef } from \"react\";\nimport { ingredientsDataSelector, bunSelector, ingredientsIsLoadingSelector, burgerIngredientsSelector } from \"../../services/selectors/ingredients-selector\";\nimport { DELETE_BURGER_INGREDIENT, changeOrderIngredients } from \"../../services/actions/burger-constructor-action\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BurgerConstructorElement(_ref) {\n  _s();\n  let {\n    id,\n    elseProducts,\n    moveItem,\n    ingredient,\n    index\n  } = _ref;\n  // const dispatch = useDispatch();\n  // const ref = useRef(null);\n\n  // const ingredients = useSelector(burgerIngredientsSelector);\n\n  // const changeIngredients = (dragIndex, hoverIndex, ingredients) => {\n  //   dispatch(changeOrderIngredients(dragIndex, hoverIndex, ingredients));\n  // };\n\n  // // const handleRemoveElement = useCallback(() => {\n  // //   dispatch({\n  // //     type: DELETE_INGREDIENT,\n  // //     payload: index,\n  // //   });\n  // // }, [dispatch, index]);\n\n  // const [{ handlerId }, drop] = useDrop({\n  //   accept: \"burger-ingredient\",\n  //   collect(monitor) {\n  //     return {\n  //       handlerId: monitor.getHandlerId(),\n  //     };\n  //   },\n  //   hover(item, monitor) {\n  //     if (!ref.current) {\n  //       return;\n  //     }\n\n  //     const dragIndex = item.index;\n  //     const hoverIndex = index;\n\n  //     if (dragIndex === hoverIndex) {\n  //       return;\n  //     }\n\n  //     const hoverRect = ref.current?.getBoundingClientRect();\n  //     const hoverCenterY = (hoverRect.bottom - hoverRect.top) / 2;\n  //     const clientOffset = monitor.getClientOffset();\n  //     const hoverClientY = clientOffset.y - hoverRect.top;\n\n  //     if (\n  //       (dragIndex < hoverIndex && hoverClientY < hoverCenterY) ||\n  //       (dragIndex > hoverIndex && hoverClientY > hoverCenterY)\n  //     ) {\n  //       return;\n  //     }\n\n  //     changeIngredients(dragIndex, hoverIndex, ingredients);\n  //     item.index = index;\n  //   },\n  // });\n\n  // const [_, drag] = useDrag({\n  //   type: \"burger-ingredient\",\n  //   item: { index },\n  // });\n\n  // drag(drop(ref));\n\n  const dispatch = useDispatch();\n  const ref = useRef(null);\n  const [{\n    handlerId\n  }, drop] = useDrop({\n    accept: \"moveItem\",\n    collect(monitor) {\n      return {\n        handlerId: monitor.getHandlerId()\n      };\n    },\n    hover(item, monitor) {\n      var _ref$current;\n      if (!ref.current) {\n        return;\n      }\n      const dragIndex = item.index;\n      const hoverIndex = index;\n      if (dragIndex === hoverIndex) {\n        return;\n      }\n      const hoverBoundingRect = (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.getBoundingClientRect();\n      const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n      const clientOffset = monitor.getClientOffset();\n      const hoverClientY = clientOffset.y - hoverBoundingRect.top;\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n        return;\n      }\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n        return;\n      }\n      moveItem(dragIndex, hoverIndex, elseProducts);\n      item.index = hoverIndex;\n    }\n  });\n  const [{\n    isDragging,\n    cursor\n  }, drag] = useDrag({\n    type: \"moveItem\",\n    item: () => {\n      return {\n        id,\n        index\n      };\n    },\n    collect: monitor => ({\n      isDragging: monitor.isDragging(),\n      cursor: monitor.isDragging() ? 'grabbing' : 'grab'\n    })\n  });\n  const opacity = isDragging ? styles.hidden : styles.visible;\n  drag(drop(ref));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.elements /*key={item.id}*/,\n    ref: ref,\n    \"data-handler-id\": handlerId,\n    children: [/*#__PURE__*/_jsxDEV(DragIcon, {\n      type: \"primary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ConstructorElement, {\n      text: ingredient.name,\n      price: ingredient.price,\n      thumbnail: ingredient.image_mobile\n\n      // price={item.price}\n      // thumbnail={item.image}\n      // handleClose={() => handleRemoveElement()}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n}\n_s(BurgerConstructorElement, \"2uZg0M13hOxlVPmX1qS81Nszvoo=\", false, function () {\n  return [useDispatch, useDrop, useDrag];\n});\n_c = BurgerConstructorElement;\nexport default BurgerConstructorElement;\nvar _c;\n$RefreshReg$(_c, \"BurgerConstructorElement\");","map":{"version":3,"names":["React","useMemo","useState","useDrag","useDrop","styles","ConstructorElement","useDispatch","useSelector","DragIcon","useCallback","useRef","ingredientsDataSelector","bunSelector","ingredientsIsLoadingSelector","burgerIngredientsSelector","DELETE_BURGER_INGREDIENT","changeOrderIngredients","jsxDEV","_jsxDEV","BurgerConstructorElement","_ref","_s","id","elseProducts","moveItem","ingredient","index","dispatch","ref","handlerId","drop","accept","collect","monitor","getHandlerId","hover","item","_ref$current","current","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","clientOffset","getClientOffset","hoverClientY","y","isDragging","cursor","drag","type","opacity","hidden","visible","className","elements","children","fileName","_jsxFileName","lineNumber","columnNumber","text","name","price","thumbnail","image_mobile","_c","$RefreshReg$"],"sources":["D:/Project/react-stellar-burger/src/components/burger-constructor-element/burger-constructor-element.jsx"],"sourcesContent":["import React, { useMemo, useState } from \"react\";\r\nimport { useDrag, useDrop } from \"react-dnd\";\r\nimport styles from './burger-constructor-element.module.css'\r\nimport { ConstructorElement } from \"@ya.praktikum/react-developer-burger-ui-components\"\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { DragIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { useCallback, useRef } from \"react\";\r\nimport {\r\n  ingredientsDataSelector,\r\n  bunSelector,\r\n  ingredientsIsLoadingSelector,\r\n  burgerIngredientsSelector\r\n} from \"../../services/selectors/ingredients-selector\";\r\n\r\nimport {\r\n  DELETE_BURGER_INGREDIENT,\r\n  changeOrderIngredients,\r\n} from \"../../services/actions/burger-constructor-action\";\r\n\r\n\r\n\r\nfunction BurgerConstructorElement({ id, elseProducts, moveItem, ingredient, index }) {\r\n  // const dispatch = useDispatch();\r\n  // const ref = useRef(null);\r\n\r\n  // const ingredients = useSelector(burgerIngredientsSelector);\r\n\r\n  // const changeIngredients = (dragIndex, hoverIndex, ingredients) => {\r\n  //   dispatch(changeOrderIngredients(dragIndex, hoverIndex, ingredients));\r\n  // };\r\n\r\n  // // const handleRemoveElement = useCallback(() => {\r\n  // //   dispatch({\r\n  // //     type: DELETE_INGREDIENT,\r\n  // //     payload: index,\r\n  // //   });\r\n  // // }, [dispatch, index]);\r\n\r\n  // const [{ handlerId }, drop] = useDrop({\r\n  //   accept: \"burger-ingredient\",\r\n  //   collect(monitor) {\r\n  //     return {\r\n  //       handlerId: monitor.getHandlerId(),\r\n  //     };\r\n  //   },\r\n  //   hover(item, monitor) {\r\n  //     if (!ref.current) {\r\n  //       return;\r\n  //     }\r\n\r\n  //     const dragIndex = item.index;\r\n  //     const hoverIndex = index;\r\n\r\n  //     if (dragIndex === hoverIndex) {\r\n  //       return;\r\n  //     }\r\n\r\n  //     const hoverRect = ref.current?.getBoundingClientRect();\r\n  //     const hoverCenterY = (hoverRect.bottom - hoverRect.top) / 2;\r\n  //     const clientOffset = monitor.getClientOffset();\r\n  //     const hoverClientY = clientOffset.y - hoverRect.top;\r\n\r\n  //     if (\r\n  //       (dragIndex < hoverIndex && hoverClientY < hoverCenterY) ||\r\n  //       (dragIndex > hoverIndex && hoverClientY > hoverCenterY)\r\n  //     ) {\r\n  //       return;\r\n  //     }\r\n\r\n  //     changeIngredients(dragIndex, hoverIndex, ingredients);\r\n  //     item.index = index;\r\n  //   },\r\n  // });\r\n\r\n  // const [_, drag] = useDrag({\r\n  //   type: \"burger-ingredient\",\r\n  //   item: { index },\r\n  // });\r\n\r\n  // drag(drop(ref));\r\n\r\n  const dispatch = useDispatch();\r\n  const ref = useRef(null)\r\n  const [{ handlerId }, drop] = useDrop({\r\n    accept: \"moveItem\",\r\n    collect(monitor) {\r\n      return {\r\n        handlerId: monitor.getHandlerId(),\r\n      }\r\n    },\r\n    hover(item, monitor) {\r\n      if (!ref.current) {\r\n        return\r\n      }\r\n      const dragIndex = item.index\r\n      const hoverIndex = index\r\n      if (dragIndex === hoverIndex) {\r\n        return\r\n      }\r\n      const hoverBoundingRect = ref.current?.getBoundingClientRect()\r\n      const hoverMiddleY =\r\n        (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2\r\n      const clientOffset = monitor.getClientOffset()\r\n      const hoverClientY = clientOffset.y - hoverBoundingRect.top\r\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\r\n        return\r\n      }\r\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\r\n        return\r\n      }\r\n      moveItem(dragIndex, hoverIndex, elseProducts)\r\n      item.index = hoverIndex\r\n    },\r\n  })\r\n  const [{ isDragging, cursor }, drag] = useDrag({\r\n    type: \"moveItem\",\r\n    item: () => {\r\n      return { id, index }\r\n    },\r\n    collect: (monitor) => ({\r\n      isDragging: monitor.isDragging(),\r\n      cursor: monitor.isDragging() ? 'grabbing' : 'grab'\r\n    }),\r\n  })\r\n  const opacity = isDragging ? styles.hidden : styles.visible\r\n  drag(drop(ref))\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className={styles.elements} /*key={item.id}*/\r\n      ref={ref}\r\n      data-handler-id={handlerId}\r\n    >\r\n      <DragIcon type=\"primary\" />\r\n      <ConstructorElement\r\n        text={ingredient.name}\r\n        price={ingredient.price}\r\n        thumbnail={ingredient.image_mobile}\r\n\r\n\r\n\r\n      // price={item.price}\r\n      // thumbnail={item.image}\r\n      // handleClose={() => handleRemoveElement()}\r\n      />\r\n    </div>\r\n  )\r\n}\r\nexport default BurgerConstructorElement;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}